<?php
// $Id$

/**
 * @file
 * This module provides basic functionality for the merchant, network and partner content types.
 * @author Michael Prasuhn <mike@shomeya.com>
 * @link http://www.shomeya.com/
 * @package eg_merchant
 */

/* -----------------------------------------------------------------
  Hook Implementations
------------------------------------------------------------------ */

/**
 * Implementation of hook_node_info().
 */
function eg_merchant_node_info() {
  return array(
    'merchant' => array(
      'name' => t('Merchant'),
      'module' => 'eg_merchant',
      'description' => t("Merchant content type"),
      'has_title' => TRUE,
      'title_label' => t('Merchant name'),
      'has_body' => FALSE,
    ),
  );
}

/**
 * Implementation of hook_perm().
 */
function eg_merchant_perm() {
  return array(
    'create merchant content',
    'delete own merchant content',
    'delete any merchant content',
    'edit own merchant content',
    'edit any merchant content',
    'view merchants',
  );
}

/**
 * Implementation of hook_content_extra_fields.
 */
function eg_merchant_content_extra_fields($type_name) {
  $extras = array();

  if ($type_name == 'merchant') {
    $extras['eg_merchant_data'] = array(
      'label' => t('Merchant data'),
      'description' => t('Merchant data fields.'),
      'weight' => 0,
    );
  }

  return $extras;
}

/**
 * Implementation of hook_access().
 */
function eg_merchant_access($op, $node, $account) {
  if ($op == 'create') {
    return user_access('create '. $node->type .' content', $account);
  }
  if ($op == 'update') {
    if (user_access('edit any '. $node->type .' content', $account) || (user_access('edit own '. $node->type .' content', $account) && ($account->uid == $node->uid))) {
      return TRUE;
    }
  }
  if ($op == 'delete') {
    if (user_access('delete any '. $node->type .' content', $account) || (user_access('delete own '. $node->type .' content', $account) && ($account->uid == $node->uid))) {
      return TRUE;
    }
  }
  if ($op == 'view') {
    if (user_access('view merchants')) {
      return TRUE;
    }
  }
  return FALSE;
}

/**
 * Implementation of hook_form().
 */
function eg_merchant_form(&$node) {
  // The site admin can decide if this node type has a title and body, and how
  // the fields should be labeled. We need to load these settings so we can
  // build the node form correctly.
  $type = node_get_types('type', $node);

  if ($type->has_title) {
    $form['title'] = array(
      '#type' => 'textfield',
      '#title' => check_plain($type->title_label),
      '#required' => TRUE,
      '#default_value' => $node->title,
      '#weight' => -5,
    );
  }

  $form['eg_merchant'] = array(
    '#type' => 'fieldset',
    '#tree' => TRUE,
    '#title' => t('Merchant data'),
    '#collapsible' => TRUE,
    '#weight' => module_exists('content') ? content_extra_field_weight($node->type, 'eg_merchant_data') : 0,
  );

  $form['eg_merchant']['enabled'] = array(
    '#type' => 'checkbox',
    '#title' => t('Enabled'),
    '#default_value' => isset($node->eg_merchant['enabled']) ? $node->eg_merchant['enabled'] : TRUE,
    '#description' => t('Disabling this merchant will prevent its link from being shown anywhere on the site.'),
    
  );

  $form['eg_merchant']['network'] = array(
    '#type' => 'select',
    '#options' => eg_network_get_all_networks(),
    '#default_value' => $node->eg_merchant['network'],
    '#title' => t('Network'),
  );

  $form['eg_merchant']['link'] = array(
    '#type' => 'textfield',
    '#title' => t('Link'),
    '#required' => TRUE,
    '#default_value' => $node->eg_merchant['link'],
    '#description' => t('Insert the merchant link for the network selected. Do not include the subid, mid, etc. Example: <em>http://linksynergy.walmart.com/fs-bin/click?id=1oNHhs9MuYA&offerid=183959.10001736&type=4</em>'),
  );

  // @TODO Add network here

  if ($type->has_body) {
    // In Drupal 6, we can use node_body_field() to get the body and filter
    // elements. This replaces the old textarea + filter_form() method of
    // setting this up. It will also ensure the teaser splitter gets set up
    // properly.
    $form['body_field'] = node_body_field($node, $type->body_label, $type->min_word_count);
  }

  return $form;
}

/**
 * Implementation of hook_insert().
 */
function eg_merchant_insert($node) {
  db_query("INSERT INTO {eg_merchant} (nid, link, enabled, network) VALUES (%d, '%s', %d, %d)", $node->nid, $node->eg_merchant['link'], $node->eg_merchant['enabled'], $node->eg_merchant['network']);
}

/**
 * Implementation of hook_update().
 */
function eg_merchant_update($node) {
  db_query("UPDATE {eg_merchant} set link = '%s', enabled = %d, network = %d WHERE nid = %d", $node->eg_merchant['link'], $node->eg_merchant['enabled'], $node->eg_merchant['network'], $node->nid);
}

/**
 * Implementation of hook_load().
 */
function eg_merchant_load($node) {
  $result = db_fetch_array(db_query("SELECT link, network, enabled FROM {eg_merchant} WHERE nid = %d", $node->nid));
  $node_data = new stdClass();
  $node_data->eg_merchant = $result;
  return $node_data;
}

/**
 * Implementation of hook_nodeapi().
 */
function eg_merchant_nodeapi(&$node, $op, $teaser, $page) {
 switch ($op) {
  case 'delete revision':
    
    break;
  }
}

/**
 * Implementation of hook_delete().
 */
function eg_merchant_delete($node) {
  db_query('DELETE FROM {eg_merchant} WHERE nid = %d', $node->nid);
}

/**
 * Helper function to return all merchants.
 *
 * This function is statically cached.
 */
function eg_merchant_get_all_merchants($group_by_network = FALSE) {
  static $merchants = array();

  $result = db_query("SELECT n.nid as nid, n.title as title, nn.title as network_title FROM {node} as n LEFT JOIN {eg_merchant} m ON n.nid = m.nid LEFT JOIN {node} nn ON m.network = nn.nid WHERE n.status = 1 AND n.type = 'merchant'");
  if (!$group_by_network) {
    while ($row = db_fetch_object($result)) {
      $merchants[$row->nid] = filter_xss_admin($row->title) .' - '. filter_xss_admin($row->network_title);
    }
  }
  else {
    while ($row = db_fetch_object($result)) {
      $merchants[filter_xss_admin($row->network_title)][$row->nid] = filter_xss_admin($row->title);
    }
  }

  return $merchants;
}

/**
 * Implementation of hook_views_api().
 */
function eg_merchant_views_api() {
  return array(
    'api' => '2.0',
    'path' => drupal_get_path('module', 'eg_merchant') .'/includes',
  );
}